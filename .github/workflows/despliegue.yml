name: Deployment Pipeline

on:
  push:
    branches:
       - main 

jobs:



  install-dependencies:
    name: Install dependencies npm
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 18    
      - name: Install dependencies
        run: npm install
  
  trivy:
    name: Run Trivy (fs mode)
    runs-on: ubuntu-latest
    steps:
      - name: Run Trivy vulnerability scanner in fs mode
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          hide-progress: false
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          severity: 'UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL'



  docker-build:
    name: Build Docker image
    outputs:
      full_docker_image_tag: ${{ steps.build_image.outputs.full_docker_image_tag }}
      image_tag: ${{ steps.build_image.outputs.image_tag }}
    runs-on: ubuntu-latest
    needs: [install-dependencies, trivy]
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Add SHORT_SHA and BRANCH_TAG env variables
        run: |
          echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV
          echo "BRANCH_TAG=`echo ${GITHUB_REF##*/}`" >> $GITHUB_ENV

      - name: Set IMAGE_TAG env variable
        run: |
          echo "IMAGE_TAG=`echo ${BRANCH_TAG}-${SHORT_SHA}`" >> $GITHUB_ENV

      - name: Build and tag image
        id: build_image
        env:
          REGISTRY: ghcr.io
          IMAGE_NAME: 'mvthivs23/mi-portfolio'
          ECR_REPOSITORY: 'mvthivs23/mi-portfolio'
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
        run: |
          echo REGISTRY: $REGISTRY
          echo ECR_REPOSITORY: $ECR_REPOSITORY
          echo IMAGE_TAG: $IMAGE_TAG
          echo "Building and tagging $REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ..."
          docker build -t $REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f Dockerfile .
          mkdir -p /tmp
          docker save "$REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" > /tmp/docker-image.tar
          echo "full_docker_image_tag=$REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
          echo "image_tag=$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: docker-image
          path: /tmp/docker-image.tar
          retention-days: 1


  docker-trivy-vuln:
    name: Trivy vulnerability scanner
    runs-on: ubuntu-latest
    needs: [docker-build]
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: docker-image
          path: /tmp
      - name: Load Docker image
        run: |
          docker load --input /tmp/docker-image.tar

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "${{ needs.docker-build.outputs.full_docker_image_tag }}"
          hide-progress: false
          format: 'table'
          exit-code: '0'
          ignore-unfixed: false
          severity: 'UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL'


  docker-grype:
    name: Grype (Anchore) Docker Scan
    runs-on: ubuntu-latest
    needs: [docker-build]
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: docker-image
          path: /tmp

      - name: Load Docker image
        run: |
          docker load --input /tmp/docker-image.tar

      - name: Scan image wih Grype (Anchore)
        id: scan-image
        uses: anchore/scan-action@v3
        with:
          image: "${{ needs.docker-build.outputs.full_docker_image_tag }}"
          output-format: table
          fail-build: false

  despliegue:
    name: deploy
    runs-on: ubuntu-latest
    needs: [docker-trivy-vuln]
    steps:
      - name: Deploy the thing
        run: |
          echo Deploying ðŸš€